name: Lint Code Quality

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - diego

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Create package.json if not exists
        run: |
          if [ ! -f package.json ]; then
            echo '{
              "name": "code-quality-check",
              "version": "1.0.0",
              "scripts": {
                "lint": "eslint ."
              },
              "devDependencies": {
                "eslint": "^8.0.0"
              }
            }' > package.json
          fi

      - name: Install Dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint > lint-results.txt || true

      - name: Post Linter Results to Notion
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DB_QUALITY }}
        run: |
          RESULTS=$(cat lint-results.txt)
          curl -X POST 'https://api.notion.com/v1/pages' \
          -H "Authorization: Bearer $NOTION_API_KEY" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          --data '{
            "parent": { "database_id": "'"$NOTION_DATABASE_ID"'" },
            "properties": {
              "üìù Resultado del Linter": { "title": [{ "text": { "content": "Resultados de Linter: PR #'"${{ github.event.number }}"'" }}] },
              "üìã Detalles": { "rich_text": [{ "text": { "content": "'"$RESULTS"'" }}] },
              "üìÖ Fecha de Creaci√≥n": { "date": { "start": "'"$(date -u +%Y-%m-%dT%H:%M:%SZ)"'" } }
            }
          }'
